This does NOT work with other test cases and it's most likely wrong in all aspects, but here is my approach...

1. In order to get the lowest cost, I thought of getting an MST or Minimum Spanning Tree
2. In order to get the tree in the first place, I need to make the matrix from the given specifications
  - I used the wells values to make the houses, which are the nodes in the graph
    - So I made the matrix to replicate the diagonal sequence (as said in the representation of an adjacency matrix in the slideshow)
3. Now here's the problem that I went through...
  - I didn't know how to separate the points in the pipes 2D array into same points
    - For instance, I can't just put the lowest cost for every point in pipes because what if they're different points?
  - If I can figure it out, I can add it to that specific point in the matrix, but this is all I have...
4. Then once I have this method, I can go through the matrix and if it isn't 0, add it to the cost...
  - Here's the other problem I encountered, it was always 1 more than what was needed, so I just subtracted it...

- I would like to iterate that you can definitely use Prim's algorithm or Kruskal's algorithm, but I gave up on implementing either one of them
  - This is definitely not one of the correct or efficient answers, but this is my attempt. Please spare me.
