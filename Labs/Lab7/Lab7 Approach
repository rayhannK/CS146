The approach for this lab is basically the bottom-up approach for dynamic programming

I'm not entirely sure if my approach is correct, but this is my solution...
- So basically we want to start at the bttom FIRST, then work our way up...
  - To do this, we need to find a subproblem and if we can solve that subproblem optimally, then we will have our solution
  - In this case, our subproblem is to use what coin...
    - Basically, we want to pick coins from another denomination vs. not picking those coins at all
    - An example can be picking a nickel vs. picking FIVE pennies...

- Once we have that...
  - We can choose the smallest out of them all
    - Because we want the smallest number of coins...
  - THEN we compare our combination with the amount...
    - If it's greater than the amount...
      - That means we can't find a combination, so we return -1
    - If it's less than the amount...
      - We found our combination and we return it

Like I said, I'm not entirely sure if this works, but this is what I tried to follow based on what I saw and was given...
